// COLORS




$dark-purple: rgb(23, 3, 37);
$lime:rgb(200,212,80);
$red:rgb(230,76,76);
$blue: rgb(35, 202, 239);
$yellow:rgb(252,228,82);
$pink:rgb(225,120,175);
$egg-shell:rgb(230,230,230);
$orange:rgb(241,138,0);
$ghost-white: rgba(244, 240, 247, 0.75);
$royal-blue:rgb(77, 18, 255);




$default-font-size: 1.2rem;


$row-num: 6; 
$col-num: 5;
$cell-num: $row-num * $col-num;


$card-border-radius: 50%;
$main-color: rgb(247, 144, 247);

$edges: (
    top-left: cell-1,
    top-right: cell-#{$col-num},
    bottom-left: cell-#{$cell-num - $col-num + 1},
    bottom-right: cell-#{$col-num},
);

$themes: (
  rainbow: (
    col-1: $orange,
    col-2: $blue,
    col-3: lime,
    col-4: grey,
    col-5: $pink,
    cell-background-color: $ghost-white,
    main-color: $main-color, 
    card-border-style: 4px solid grey,
    card-background-border-style: 4px solid $main-color,
    font-family: Georgia,
    title-font-size: 3rem
  )
);


@use "sass:map";
@use "sass:list";

// functions
@function get-col-num($n){
  @return ($n - 1) % $col-num + 1;
}

// itteratively adds border radius to 4 corners of card
@mixin round-edges(){

  $cell-seq: 1 $col-num ($cell-num - $col-num + 1) ($cell-num);
  $border-seq: ($card-border-radius 0 0 0, 0 $card-border-radius 0 0, 0 0 0 $card-border-radius, 0 0 $card-border-radius 0 );
  @for $i from 1 through 4 {
    .col:has(#cell-#{list.nth($cell-seq, $i)}) * {
      border-radius: list.nth($border-seq, $i)
    }
  }

  // round inner card content
  .row:nth-child(2) > .col:first-child *{
    border-top-left-radius: $card-border-radius;
  }
  .row:nth-child(2) > .col:last-child *{
    border-top-right-radius: $card-border-radius;
  }
}

//color mixins

@mixin apply-card-border-style($theme-map){
  @include round-edges();

  $card-border-style: map.get($theme-map,card-border-style);
  $card-background-border-style: map.get($theme-map,card-background-border-style);
  $cell-num: $row-num * $col-num;

  .card-container {
    border: $card-background-border-style;
    border-radius: 10%;
  }
  .content-cell{
    border: $card-border-style;
  }

}


@mixin apply-background-color($theme-map){

    // give each column a different color
    @for $i from 1 through ($col-num * $row-num) {
      
      @if $i <= $col-num {
        
         // card title row color
        #cell-#{$i} {
          // background-color: map.get($theme-map,main-color);
          background-color: black 0%;
        }
      } @else {
        // body content col color
      #cell-#{$i} {
        background-color: map.get($theme-map,col-#{get-col-num($i)});
      }
    }
    .card-container{
      background-color: $main-color;
    }

  }
}


@mixin apply-font-style($theme-map){
  $font-family: map.get($theme-map,font-family);
  $title-font-size: map.get($theme-map,title-font-size);

  .col > * {
    font-family: $font-family;
    text-align: center;
  }
  .title-cell {
    font-size: $title-font-size;
  }
  .content-cell {
    font-size: $default-font-size;
  }

}


@mixin apply-theme($theme-name) {

  @if map.has-key($themes, $theme-name) {
      $theme-map: map.get($themes, $theme-name);

      @include apply-card-border-style($theme-map);
      @include apply-background-color($theme-map);
      @include apply-font-style($theme-map);
    }
  
}

